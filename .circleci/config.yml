version: 2
jobs:
  test:
    docker:
      - image: maven:3.5.3-jdk-8-alpine
    working_directory: ~/dokuti-build
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - dokuti-build-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: dokuti-build-{{ checksum "pom.xml" }}

      - run: mvn test
  sonarqube:
    docker:
      - image: maven:3.5.3-jdk-8-alpine
    working_directory: ~/dokuti-sonarqube
    steps:
      - checkout
      - restore_cache:
          keys:
            - dokuti-sonarqube-{{ checksum "pom.xml" }}
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: dokuti-sonarqube-{{ checksum "pom.xml" }}
      - run: |
         mvn clean
         mvn package \
                -Dmaven.test.skip=true \
            org.jacoco:jacoco-maven-plugin:prepare-agent \
            sonar:sonar \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.projectKey=GrindrodBank_dokuti \
                -Dsonar.organization=grindrodbank \
                -Dsonar.login=$SONAR_AUTH_TOKEN \
                -Dsonar.branch.name=$CIRCLE_BRANCH \
                -Dsonar.exclusions=srcgen/**/*
  docker-build:
    docker:
      - image: docker
    working_directory: ~/dokuti-docker
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      # build and push Docker image to dockerhub.
      - run: |
          TAG=0.2.$CIRCLE_BUILD_NUM
          docker build -t grindrodbank/dokuti:$TAG .     
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push grindrodbank/dokuti:$TAG
  fossa-scan:
    docker:
      - image: golang:1.10.0-stretch
    working_directory: ~/dokuti-build
    steps:
      # Install Fossa
      - run: |
          curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/fossa-cli/master/install.sh | bash
      # Install Maven
      - run: apt-get update
      - run: apt-get -y install maven
      - checkout
      - run: fossa init
      - run: cat .fossa.yml
      # Note: The -o flag does not publish the results to Fossa App, just prints them out to the console.
      # Note: The 'fossa test' command is more appropriate to be used here, but it is not functioninig (has a bug) at the time of writing this code.
      - run: FOSSA_API_KEY=$FOSSA_API_KEY fossa analyze -o
workflows:
  version: 2
  build-commit:
    jobs:
      - test
      - sonarqube
      - fossa-scan
      - docker-build:
          requires:
            - test
            - sonarqube
            - fossa-scan
          filters:
            branches:
              only: master